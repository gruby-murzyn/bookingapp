{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-movie/create-movie.component.html","webpack:///./src/app/create-movie/create-movie.component.scss","webpack:///./src/app/create-movie/create-movie.component.ts","webpack:///./src/app/movie/movie.component.html","webpack:///./src/app/movie/movie.component.scss","webpack:///./src/app/movie/movie.component.ts","webpack:///./src/app/movies.service.ts","webpack:///./src/app/movies/movies.component.html","webpack:///./src/app/movies/movies.component.scss","webpack:///./src/app/movies/movies.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav class=\\\"navbar navbar-inverse \\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\"\\n        aria-controls=\\\"navbar\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Movies Database</a>\\n    </div>\\n  </div>\\n</nav>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n  <hr>\\n  <footer>\\n    <p>&copy; 2018 Designed and created by Geofrey Zellah , Zellah's Inc .</p>\\n  </footer>\\n</div>\\n<!-- /container -->\\n\"","module.exports = \"body {\\n  background-color: red; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Movies Database';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule, JsonpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClient } from 'selenium-webdriver/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MoviesComponent } from './movies/movies.component';\r\nimport { MoviesService } from './movies.service';\r\nimport { MovieComponent } from './movie/movie.component';\r\nimport { CreateMovieComponent } from './create-movie/create-movie.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MoviesComponent,\r\n    MovieComponent,\r\n    CreateMovieComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    JsonpModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot([\r\n      {path: '', component: MoviesComponent},\r\n      {path: 'movie/:id', component: MovieComponent}\r\n    ]),\r\n  ],\r\n  providers: [MoviesService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-heading\\\">Bought a Movie?</div>\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <form (ngSubmit)=\\\"addMovie(addmovie)\\\">\\r\\n                        <div class=\\\"form-group movie-username\\\">\\r\\n                          <label for=\\\"title\\\">Name:</label>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control movie-title_text\\\" id=\\\"movie-title\\\" [(ngModel)]=\\\"addmovie.title\\\" name=\\\"title\\\">\\r\\n                        </div>           \\r\\n                    <button class=\\\"btn btn-primary\\\" style=\\\"cursor: pointer\\\">Save</button>\\r\\n                </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Location } from '@angular/common';\r\nimport { MoviesService } from '../movies.service';\r\n@Component({\r\n    selector: 'app-create-movie',\r\n    templateUrl: './create-movie.component.html',\r\n    styleUrls: ['./create-movie.component.scss']\r\n})\r\nexport class CreateMovieComponent {\r\n    movie: any;\r\n    addmovie: any;\r\n    newMovie: any[];\r\n    constructor(private http: Http, private location: Location, private moviesService: MoviesService) {\r\n        this.addmovie = [];\r\n        this.newMovie = [];\r\n    }\r\n    addMovie(addmovie: any): void {\r\n        if (!addmovie) { return; }\r\n        this.moviesService.createMovie(addmovie)\r\n          .then(movie => {\r\n           console.log(movie);\r\n           this.newMovie.push(movie.addmovie);\r\n          });\r\n      }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"movie\\\">\\r\\n  <div class=\\\"panel panel-default\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <h3 class=\\\"panel-title\\\">{{movie.title}} </h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n          <img class=\\\"thumbnail\\\" src=\\\"http://image.tmdb.org/t/p/w500/{{movie.poster_path}}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-7\\\">\\r\\n          <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item\\\">Genres:\\r\\n              <span *ngFor=\\\"let genre of movie.genres\\\">{{genre.name}}, </span>\\r\\n            </li>\\r\\n            <li class=\\\"list-group-item\\\">Release Date: {{movie.release_date}}</li>\\r\\n          </ul>\\r\\n          <br>\\r\\n          <a *ngIf=\\\"movie.homepage\\\" href=\\\"{{movie.homepage}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-default zero\\\">Visit Movie Website</a>\\r\\n        </div>\\r\\n        <div *ngFor=\\\"let review of review.results\\\" class=\\\"col-md-7\\\">\\r\\n          <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item\\\">Author: {{review.author}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Comments: {{review.content}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Comments Link:\\r\\n              <a href=\\\"{{review.url}}\\\">Visit comments link</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n          <br>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-7\\\">\\r\\n          <form (ngSubmit)=\\\"addReview(addreview)\\\">\\r\\n            <div class=\\\"form-group movie-username\\\">\\r\\n              <label for=\\\"author\\\">Name:</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control movie-username_text\\\" id=\\\"usr\\\" [(ngModel)]=\\\"addreview.author\\\" name=\\\"author\\\" #author>\\r\\n            </div>\\r\\n            <div class=\\\"form-group movie-textarea\\\">\\r\\n              <label for=\\\"movie-textarea_label description\\\">Do you like the movie? leave us a comment below</label>\\r\\n              <textarea class=\\\"form-control rounded-0\\\" \\r\\n              id=\\\"movie-textarea_textarea\\\" #description=\\\"ngModel\\\" rows=\\\"10\\\"\\r\\n              [(ngModel)]=\\\"addreview.description\\\" \\r\\n              name=\\\"description\\\"></textarea>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"img {\\n  width: 100%; }\\n\"","import { Component, OnInit} from '@angular/core';\r\nimport { MoviesService } from '../movies.service';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movie',\r\n  templateUrl: './movie.component.html',\r\n  styleUrls: ['./movie.component.scss']\r\n})\r\nexport class MovieComponent implements OnInit {\r\n  movie: object;\r\n  review: {};\r\n  addreview: any;\r\n  addreviews: any[];\r\n  constructor(private router: ActivatedRoute, private moviesService: MoviesService) {\r\n    this.movie = [];\r\n    this.review = [];\r\n    this.addreview = [];\r\n    this.addreviews = [];\r\n  }\r\n  addReview(addreview: any): void {\r\n    if (!addreview) { return; }\r\n    this.moviesService.createReview(addreview)\r\n      .then(reviews => {\r\n       console.log(reviews);\r\n       this.addreviews.push(reviews.addreview);\r\n      });\r\n  }\r\n  ngOnInit() {\r\n        this.router.params.subscribe((params) => {\r\n          // tslint:disable-next-line:prefer-const\r\n          let id = params['id'];\r\n          this.moviesService.getMovie(id)\r\n           .then(movie => {\r\n            this.movie = movie;\r\n          });\r\n        });\r\n\r\n        this.router.params.subscribe((params) => {\r\n          // tslint:disable-next-line:prefer-const\r\n          let id = params['id'];\r\n          this.moviesService.getReview(id)\r\n           .then(review => {\r\n             console.log(review);\r\n            this.review = review;\r\n          });\r\n        });\r\n      }\r\n }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { Jsonp } from '@angular/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MoviesService {\r\n  searchStr: string;\r\n  queryUrl = '/search/';\r\n  theatreUrl = '/theatre/';\r\n  movieUrl = '/movies/';\r\n  reviewUrl = '/comments/';\r\n  private apiUrl = '';\r\n  constructor(private http: Http, private _jsonp: Jsonp) { }\r\n  getMovies(id: string): Promise<any> {\r\n    return this.http.get(this.apiUrl + '/movies')\r\n      .toPromise()\r\n      .then(this.handleData)\r\n      .catch(this.handleError);\r\n  }\r\n  getMovie(id: string): Promise<any> {\r\n    return this.http.get(this.apiUrl + this.movieUrl + id)\r\n      .toPromise()\r\n      .then(this.handleData)\r\n      .catch(this.handleError);\r\n  }\r\n  getReview(id: string): Promise<any> {\r\n    return this.http.get(this.apiUrl + this.movieUrl + id)\r\n      .toPromise()\r\n      .then(this.handleData)\r\n      .catch(this.handleError);\r\n  }\r\n  searchMovies(searchStr: string): Promise<any> {\r\n    return this.http.get(this.apiUrl + this.queryUrl + searchStr)\r\n      .toPromise()\r\n      .then(this.handleData)\r\n      .catch(this.handleError);\r\n  }\r\n  getInTheaters(): Promise<any> {\r\n    return this.http.get(this.apiUrl + this.theatreUrl)\r\n      .toPromise()\r\n      .then(this.handleData)\r\n      .catch(this.handleError);\r\n  }\r\n  createReview(review: string): Promise<any> {\r\n    return this.http.post(this.apiUrl + this.reviewUrl, review)\r\n      .toPromise()\r\n      .then(this.handleData)\r\n      .catch(this.handleError);\r\n  }\r\n  createMovie(movie: string): Promise<any> {\r\n    return this.http.post(this.apiUrl + this.movieUrl, movie)\r\n      .toPromise()\r\n      .then(this.handleData)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleData(res: any) {\r\n    const body = res.json();\r\n    console.log(body); // for development purposes only\r\n    return body.result || body || {};\r\n  }\r\n  private handleError(error: any): Promise<any> {\r\n    console.error('An error occurred', error); // for development purposes only\r\n    return Promise.reject(error.message || error);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"jumbotron jumbotron--box\\\">\\n  <div class=\\\"container jumbotron--container\\\">\\n      <app-create-movie></app-create-movie>\\n    <h1>Find A Movie</h1>\\n    <p>Search for a movie using the form below</p>\\n    <form (submit)=\\\"searchMovies()\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control jumbotron--container_form-input\\\" [(ngModel)]=\\\"searchStr\\\" name=\\\"searchStr\\\">\\n      <br>\\n      <button class=\\\"btn  btn-warning btn-lg btn-block jumbotron--container_button\\\">Search your Favourite Movies</button>  \\n    </form>\\n  </div>\\n</div>\\n\\n\\n<div *ngIf=\\\"searchRes\\\" class=\\\"panel panel-default search-panel\\\">\\n    <div class=\\\"panel-heading search-panel_heading\\\">\\n      <h3 class=\\\"panel-title search-panel_title\\\">Search Results</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"row movie-searched\\\">\\n          <div *ngFor=\\\"let movie of searchRes;let i=index\\\" class=\\\"col-md-2\\\">\\n              <div *ngIf=\\\"i < 6\\\">\\n              <img *ngIf=\\\"movie.poster_path\\\" class=\\\"thumbnail movie-searched_img\\\" src=\\\"http://image.tmdb.org/t/p/w500/{{movie.poster_path}}\\\">\\n              <h4>{{movie.title}}</h4>\\n              <p>{{movie.release_date}}</p>\\n              <p><a class=\\\"btn btn-default\\\" routerLink=\\\"/movie{{movie.id}}\\\" role=\\\"button\\\">View details &raquo;</a></p>\\n              </div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n<div class=\\\"panel panel-default\\\">\\n<div class=\\\"panel-heading\\\">\\n<h3 class=\\\"panel-title\\\">Popular Movies</h3>\\n</div>\\n<div class=\\\"panel-body\\\">\\n<div class=\\\"row\\\">\\n    <div *ngFor=\\\"let movie of movies; let i=index\\\" class=\\\"col-md-2\\\">\\n        <div *ngIf=\\\"i < 6\\\">\\n        <img *ngIf=\\\"movie.poster_path\\\" class=\\\"thumbnail\\\" src=\\\"http://image.tmdb.org/t/p/w500/{{movie.poster_path}}\\\">\\n        <h4>{{movie.title}}</h4>\\n        <p>{{movie.release_date}}</p>\\n\\n        <p><a class=\\\"btn btn-default\\\" routerLink=\\\"/movie/{{movie.id}}\\\">View details &raquo;</a></p>\\n      </div>\\n    </div>\\n</div>\\n</div>\\n</div>\\n\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">In Theaters</h3>\\n    </div>\\n<div class=\\\"panel-body\\\">\\n<div class=\\\"row\\\">\\n    <div *ngFor=\\\"let movie of theatersList;let i=index\\\" class=\\\"col-md-2\\\">\\n            <div *ngIf=\\\"i < 6\\\">\\n                <img *ngIf=\\\"movie.poster_path\\\" class=\\\"thumbnail\\\" src=\\\"http://image.tmdb.org/t/p/w500/{{movie.poster_path}}\\\">\\n                <h4>{{movie.title}}</h4>\\n                <p>{{movie.release_date}}</p>\\n                <p><a class=\\\"btn btn-default\\\" routerLink=\\\"/movie/{{movie.id}}\\\" role=\\\"button\\\">View details &raquo;</a></p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"panel panel-default movies-table-panel\\\">\\n                <div class=\\\"panel-heading movies-table-panel_heading\\\">Movies</div>\\n                <table class=\\\"table table-striped movies-table-panel_striped\\\" >\\n                    <thead>\\n                        <tr>\\n                            <th>Title</th>\\n                            <th>Release Date</th>\\n                            <th>Votes Count</th>\\n                            <th>Popularity</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let movie of movies\\\">\\n                            <td>{{ movie.title }}</td>\\n                            <td>{{ movie.release_date}}</td>\\n                            <td>{{ movie.vote_count }}</td>\\n                            <td>{{ movie.popularity }}</td>\\n                           \\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n\\n            \\n        \\n  \"","module.exports = \".jumbotron--box {\\n  margin-top: 62px;\\n  position: relative;\\n  width: 100%;\\n  padding-top: 150px;\\n  padding-bottom: 100px;\\n  color: white;\\n  background: url(\\\"/assets/bg-pattern.png\\\"), linear-gradient(to left, #3f51b5, #3f51b5); }\\n  .jumbotron--box .jumbotron--container_button {\\n    border-radius: 300px;\\n    font-family: Lato, Helvetica, Arial, sans-serif;\\n    letter-spacing: 2px;\\n    text-transform: uppercase;\\n    font-size: 1vw; }\\n  .search-panel_title {\\n  color: #28a745; }\\n  .movies-table-panel_striped:nth-child(even) {\\n  background-color: skyblue; }\\n  .movie-searched_image {\\n  width: 100%; }\\n  img {\\n  width: 100%; }\\n  .btn-default {\\n  background-color: #291c1c !important;\\n  color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Location } from '@angular/common';\nimport { MoviesService } from '../movies.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.scss']\n})\nexport class MoviesComponent implements OnInit {\n   movies: any;\n   searchRes: any;\n   searchStr: any;\n   theatersList: any;\n constructor(private router: ActivatedRoute, private http: Http, private location: Location, private moviesService: MoviesService) {\n      this.movies = [];\n      this.moviesService.getInTheaters().then(res => {\n        this.theatersList = res.results;\n    });\n  }\n  searchMovies() {\n    this.moviesService.searchMovies(this.searchStr).then(res => {\n        this.searchRes = res.results;\n    });\n}\n  ngOnInit() {\n    this.router.params.subscribe((params) => {\n      const id = params['id'];\n      this.moviesService.getMovies(id)\n      .then((movies: any) => {\n        console.log(movies);\n        this.movies = movies.results;\n    });\n   });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}