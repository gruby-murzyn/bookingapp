{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-movie/create-movie.component.html","webpack:///./src/app/create-movie/create-movie.component.scss","webpack:///./src/app/create-movie/create-movie.component.ts","webpack:///./src/app/movie/movie.component.html","webpack:///./src/app/movie/movie.component.scss","webpack:///./src/app/movie/movie.component.ts","webpack:///./src/app/movies.service.ts","webpack:///./src/app/movies/movies.component.html","webpack:///./src/app/movies/movies.component.scss","webpack:///./src/app/movies/movies.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top movie-navbar\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\"\\r\\n        aria-controls=\\\"navbar\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n      </button>\\r\\n      <a class=\\\"navbar-brand movies-brand\\\" href=\\\"#\\\">Movies Database</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<section class=\\\"main-header\\\" id=\\\"main\\\">\\r\\n  <div class=\\\"home-cont\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"main-header-sub text-center\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"content-text\\\">\\r\\n              <h1>Movies Database </h1>\\r\\n              <h3>Bootstrap 3 + Angular 6 Movies Database</h3>\\r\\n              <a href=\\\"#jumbotron\\\" class=\\\"btn btn-primary learn-more\\\">Explore Movies Database</a>\\r\\n              <div class=\\\"circle-1\\\"></div>\\r\\n              <div class=\\\"circle-2\\\"></div>\\r\\n              <div class=\\\"circle-3\\\"></div>\\r\\n              <div class=\\\"circle-4\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"img-section\\\">\\r\\n            <img class=\\\"img-chat img-fluid\\\" src=\\\"/assets/mobile.png\\\" alt=\\\"\\\">\\r\\n            <img class=\\\"img-browser img-fluid\\\" src=\\\"/assets/laptop.png\\\" alt=\\\"\\\">\\r\\n            <img class=\\\"img-followers img-fluid\\\" src=\\\"/assets/mobile.png\\\" alt=\\\"\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"round-header-circle hidden-sm hidden-xs\\\">\\r\\n    <div class=\\\"round-animate\\\">\\r\\n      <div class=\\\"round-1\\\">\\r\\n        <span class=\\\"r-1\\\"></span>\\r\\n        <span class=\\\"r-2\\\"></span>\\r\\n        <span class=\\\"r-3\\\"></span>\\r\\n        <span class=\\\"r-4\\\"></span>\\r\\n      </div>\\r\\n      <div class=\\\"round-2\\\">\\r\\n        <span class=\\\"r-1\\\"></span>\\r\\n        <span class=\\\"r-2\\\"></span>\\r\\n        <span class=\\\"r-3\\\"></span>\\r\\n        <span class=\\\"r-4\\\"></span>\\r\\n      </div>\\r\\n      <div class=\\\"round-3\\\">\\r\\n        <span class=\\\"r-1\\\"></span>\\r\\n        <span class=\\\"r-2\\\"></span>\\r\\n        <span class=\\\"r-3\\\"></span>\\r\\n        <span class=\\\"r-4\\\"></span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n<div class=\\\"container\\\">\\r\\n    <flash-messages></flash-messages>\\r\\n  <router-outlet></router-outlet>\\r\\n  <footer>\\r\\n    <p>&copy; 2018 Designed and created by Geofrey Zellah , Zellah's Inc .</p>\\r\\n  </footer>\\r\\n</div>\\r\\n<!-- /container -->\\r\\n\"","module.exports = \"body {\\n  background-color: red; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Movies Database';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule, JsonpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClient } from 'selenium-webdriver/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MoviesComponent } from './movies/movies.component';\r\nimport { MoviesService } from './movies.service';\r\nimport { MovieComponent } from './movie/movie.component';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CreateMovieComponent } from './create-movie/create-movie.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MoviesComponent,\r\n    MovieComponent,\r\n    CreateMovieComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    JsonpModule,\r\n    ReactiveFormsModule ,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    FlashMessagesModule.forRoot(),\r\n    RouterModule.forRoot([\r\n      {path: '', component: MoviesComponent},\r\n      {path: 'movie/:id', component: MovieComponent}\r\n    ]),\r\n  ],\r\n  providers: [MoviesService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-heading\\\">Bought a Movie?</div>\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <form (ngSubmit)=\\\"addMovie(addmovie)\\\">\\r\\n                        <div class=\\\"form-group movie-username\\\">\\r\\n                          <label for=\\\"title\\\">Name:</label>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control movie-title_text\\\" id=\\\"movie-title\\\" [(ngModel)]=\\\"addmovie.title\\\" name=\\\"title\\\">\\r\\n                        </div>           \\r\\n                    <button class=\\\"btn btn-primary\\\" style=\\\"cursor: pointer\\\">Save</button>\\r\\n                </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Location } from '@angular/common';\r\nimport { MoviesService } from '../movies.service';\r\n@Component({\r\n    selector: 'app-create-movie',\r\n    templateUrl: './create-movie.component.html',\r\n    styleUrls: ['./create-movie.component.scss']\r\n})\r\nexport class CreateMovieComponent {\r\n    movie: any;\r\n    addmovie: any;\r\n    newMovie: any[];\r\n    constructor(private http: Http, private location: Location, private moviesService: MoviesService) {\r\n        this.addmovie = [];\r\n        this.newMovie = [];\r\n    }\r\n    addMovie(addmovie: any): void {\r\n        if (!addmovie) { return; }\r\n        this.moviesService.createMovie(addmovie)\r\n          .subscribe(movie => {\r\n           console.log(movie);\r\n           this.newMovie.push(movie.addmovie);\r\n          });\r\n      }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"movie\\\">\\r\\n  <div class=\\\"panel panel-default\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <h3 class=\\\"panel-title\\\">{{movie.title}} </h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n          <img class=\\\"thumbnail\\\" src=\\\"http://image.tmdb.org/t/p/w500/{{movie.poster_path}}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-7\\\">\\r\\n          <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item\\\">Genres:\\r\\n              <span *ngFor=\\\"let genre of movie.genres\\\">{{genre.name}}, </span>\\r\\n            </li>\\r\\n            <li class=\\\"list-group-item\\\">Release Date: {{movie.release_date}}</li>\\r\\n          </ul>\\r\\n          <br>\\r\\n          <a *ngIf=\\\"movie.homepage\\\" href=\\\"{{movie.homepage}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-default zero\\\">Visit Movie Website</a>\\r\\n        </div>\\r\\n        <br>\\r\\n        <div *ngFor=\\\"let review of review.results\\\" class=\\\"col-md-7\\\">\\r\\n          <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item\\\">Author: {{review.author}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Comments: {{review.content}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Comments Link:\\r\\n              <a href=\\\"{{review.url}}\\\">Visit comments link</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n          <br>\\r\\n        </div>\\r\\n        <div *ngFor=\\\"let comment of comments\\\" class=\\\"col-md-7\\\">\\r\\n          <ul class=\\\"list-group\\\">\\r\\n            <li class=\\\"list-group-item\\\">Author: {{comment.author}}</li>\\r\\n            <li class=\\\"list-group-item\\\">Comments: {{comment.description}}</li>\\r\\n          </ul>\\r\\n          <br>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-7 movie-form\\\" >\\r\\n          <flash-messages></flash-messages>\\r\\n          <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-md-4\\\">Author</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"author\\\" formControlName=\\\"author\\\" #author />\\r\\n            </div>\\r\\n            <div *ngIf=\\\"angForm.controls['author'].invalid && (angForm.controls['author'].dirty || angForm.controls['author'].touched)\\\"\\r\\n              class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"angForm.controls['author'].errors.required\\\">\\r\\n                Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-md-4\\\">Description</label>\\r\\n              <textarea cols=\\\"10\\\" rows=\\\"10\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\" #description>\\r\\n                </textarea>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"angForm.controls['description'].invalid && (angForm.controls['description'].dirty || angForm.controls['description'].touched)\\\"\\r\\n              class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"angForm.controls['description'].errors.required\\\">\\r\\n                description is required.\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <button (click)=\\\"addReview(author.value, description.value)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Add</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"img {\\n  width: 100%; }\\n\\n.movie-form {\\n  margin-top: 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MoviesService } from '../movies.service';\r\nimport { Comments } from '../../../../app/models/comments';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesModule, FlashMessagesService } from 'angular2-flash-messages';\r\n@Component({\r\n  selector: 'app-movie',\r\n  templateUrl: './movie.component.html',\r\n  styleUrls: ['./movie.component.scss']\r\n})\r\nexport class MovieComponent implements OnInit {\r\n  movie: object;\r\n  review: {};\r\n  comments: {};\r\n  addcomments: Comment[];\r\n  addreview: {};\r\n  addreviews: any[];\r\n  angForm: FormGroup;\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(\r\n    private flashMessages: FlashMessagesService,\r\n    private fb: FormBuilder,\r\n    private route: Router,\r\n    private http: HttpClient,\r\n    private activeRouter: ActivatedRoute,\r\n    private moviesService: MoviesService) {\r\n    this.movie = [];\r\n    this.review = [];\r\n    this.comments = [];\r\n    this.addreviews = [];\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      author: ['', Validators.required],\r\n      description: ['', Validators.required]\r\n    });\r\n  }\r\n  addReview(author, description) {\r\n    this.moviesService.addReview(author, description).subscribe(success => {\r\n        this.flashMessages.show('You are data we succesfully submitted', { cssClass: 'alert-success', timeout: 3000 });\r\n        // get the id\r\n        this.activeRouter.params.subscribe((params) => {\r\n          // tslint:disable-next-line:prefer-const\r\n          let id = params['id'];\r\n          this.moviesService.getComments(id)\r\n            .subscribe(comments => {\r\n              console.log(comments);\r\n              this.comments = comments;\r\n            });\r\n        });\r\n    }, error => {\r\n        this.flashMessages.show('Something went wrong', { cssClass: 'alert-danger', timeout: 3000 });\r\n    });\r\n}\r\n  ngOnInit() {\r\n    this.activeRouter.params.subscribe((params) => {\r\n      // tslint:disable-next-line:prefer-const\r\n      let id = params['id'];\r\n      this.moviesService.getMovie(id)\r\n        .subscribe(movie => {\r\n          this.movie = movie;\r\n        });\r\n    });\r\n    this.activeRouter.params.subscribe((params) => {\r\n      // tslint:disable-next-line:prefer-const\r\n      let id = params['id'];\r\n      this.moviesService.getReview(id)\r\n        .subscribe(review => {\r\n          console.log(review);\r\n          this.review = review;\r\n        });\r\n    });\r\n    this.activeRouter.params.subscribe((params) => {\r\n      // tslint:disable-next-line:prefer-const\r\n      let id = params['id'];\r\n      this.moviesService.getComments(id)\r\n        .subscribe(comments => {\r\n          console.log(comments);\r\n          this.comments = comments;\r\n        });\r\n    });\r\n\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\nconst apiUrl = '/movies';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MoviesService {\r\n  searchStr: string;\r\n  queryUrl = '/search/';\r\n  theatreUrl = '/theatre/';\r\n  moviesUrl = '/movies/';\r\n  reviewUrl = '/review';\r\n  commentsUrl = '/comment';\r\n  addCommentsUrl = '/comments';\r\n  movieUrl = '/movies';\r\n  constructor(private http: HttpClient) { }\r\n  // function to extract data from rensponse\r\n  private extractData(res: Response) {\r\n    // tslint:disable-next-line:prefer-const\r\n    let body = res;\r\n    return body || {};\r\n  }\r\n  // Return all movies\r\n  getMovies(): Observable<any> {\r\n    return this.http.get(apiUrl + this.moviesUrl, httpOptions).pipe(\r\n      map(this.extractData),\r\n      catchError(this.handleError));\r\n  }\r\n  // Return single movie by ID.\r\n  getMovie(id: string): Observable<any> {\r\n    const url = `${apiUrl + this.movieUrl}/${id}`;\r\n    return this.http.get(url, httpOptions).pipe(\r\n      map(this.extractData),\r\n      catchError(this.handleError));\r\n  }\r\n  // Return movie  revies by ID.\r\n  getReview(id: string): Observable<any> {\r\n    const url = `${apiUrl + this.reviewUrl}/${id}`;\r\n    return this.http.get(url, httpOptions).pipe(\r\n      map(this.extractData),\r\n      catchError(this.handleError));\r\n  }\r\n  // Return movies in theaters\r\n  getInTheaters(): Observable<any> {\r\n    return this.http.get(apiUrl + this.theatreUrl, httpOptions).pipe(\r\n      map(this.extractData),\r\n      catchError(this.handleError));\r\n\r\n  }\r\n  // Return Comments\r\n  getComments(id: string): Observable<any> {\r\n    const url = `${apiUrl + this.commentsUrl}/${id}`;\r\n    return this.http.get(url, httpOptions).pipe(\r\n      map(this.extractData),\r\n      catchError(this.handleError));\r\n  }\r\n  // Return the search movie in front end\r\n  searchMovies(searchStr: string): Observable<any> {\r\n    return this.http.get(apiUrl + this.queryUrl + searchStr, httpOptions).pipe(\r\n      map(this.extractData),\r\n      catchError(this.handleError));\r\n  }\r\n  // Adds comments\r\n  addReview(author, description): Observable<any> {\r\n    const uri = `${apiUrl + this.addCommentsUrl}`;\r\n    const obj = {\r\n      author: author,\r\n      description: description\r\n    };\r\n    return this.http.post(uri, obj);\r\n  }\r\n  createMovie(data): Observable<any> {\r\n    return this.http.post(apiUrl, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  // Errors Handler\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError('Something bad happened; please try again later.');\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"jumbotron jumbotron--box\\\" id=\\\"jumbotron\\\">\\n  <div class=\\\"container jumbotron--container\\\">\\n      <app-create-movie></app-create-movie>\\n    <h1>Find A Movie</h1>\\n    <p>Search for a movie using the form below</p>\\n    <form (submit)=\\\"searchMovies()\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control jumbotron--container_form-input\\\" [(ngModel)]=\\\"searchStr\\\" name=\\\"searchStr\\\">\\n      <br>\\n      <button class=\\\"btn  btn-warning btn-lg btn-block jumbotron--container_button\\\">Search your Favourite Movies</button>  \\n    </form>\\n  </div>\\n</div>\\n\\n\\n<div *ngIf=\\\"searchRes\\\" class=\\\"panel panel-default search-panel\\\">\\n    <div class=\\\"panel-heading search-panel_heading\\\">\\n      <h3 class=\\\"panel-title search-panel_title\\\">Search Results</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"row movie-searched\\\">\\n          <div *ngFor=\\\"let movie of searchRes;let i=index\\\" class=\\\"col-md-2\\\">\\n              <div *ngIf=\\\"i < 6\\\">\\n              <img *ngIf=\\\"movie.poster_path\\\" class=\\\"thumbnail movie-searched_img\\\" src=\\\"http://image.tmdb.org/t/p/w500/{{movie.poster_path}}\\\">\\n              <h4>{{movie.title}}</h4>\\n              <p>{{movie.release_date}}</p>\\n              <p><a class=\\\"btn btn-default\\\" routerLink=\\\"/movie/{{movie.id}}\\\" role=\\\"button\\\">View details &raquo;</a></p>\\n              </div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n<div class=\\\"panel panel-default\\\">\\n<div class=\\\"panel-heading\\\">\\n<h3 class=\\\"panel-title\\\">Popular Movies</h3>\\n</div>\\n<div class=\\\"panel-body\\\">\\n<div class=\\\"row\\\">\\n    <div *ngFor=\\\"let movie of movies; let i=index\\\" class=\\\"col-md-2\\\">\\n        <div *ngIf=\\\"i < 6\\\">\\n        <img *ngIf=\\\"movie.poster_path\\\" class=\\\"thumbnail\\\" src=\\\"http://image.tmdb.org/t/p/w500/{{movie.poster_path}}\\\">\\n        <h4>{{movie.title}}</h4>\\n        <p>{{movie.release_date}}</p>\\n\\n        <p><a class=\\\"btn btn-default\\\" routerLink=\\\"/movie/{{movie.id}}\\\">View details &raquo;</a></p>\\n      </div>\\n    </div>\\n</div>\\n</div>\\n</div>\\n\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">In Theaters</h3>\\n    </div>\\n<div class=\\\"panel-body\\\">\\n<div class=\\\"row\\\">\\n    <div *ngFor=\\\"let movie of theatersList;let i=index\\\" class=\\\"col-md-2\\\">\\n            <div *ngIf=\\\"i < 6\\\">\\n                <img *ngIf=\\\"movie.poster_path\\\" class=\\\"thumbnail\\\" src=\\\"http://image.tmdb.org/t/p/w500/{{movie.poster_path}}\\\">\\n                <h4>{{movie.title}}</h4>\\n                <p>{{movie.release_date}}</p>\\n                <p><a class=\\\"btn btn-default\\\" routerLink=\\\"/movie/{{movie.id}}\\\" role=\\\"button\\\">View details &raquo;</a></p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"panel panel-default movies-table-panel\\\">\\n                <div class=\\\"panel-heading movies-table-panel_heading\\\">Movies</div>\\n                <table class=\\\"table table-striped movies-table-panel_striped\\\" >\\n                    <thead>\\n                        <tr>\\n                            <th>Title</th>\\n                            <th>Release Date</th>\\n                            <th>Votes Count</th>\\n                            <th>Popularity</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let movie of movies\\\">\\n                            <td>{{ movie.title }}</td>\\n                            <td>{{ movie.release_date}}</td>\\n                            <td>{{ movie.vote_count }}</td>\\n                            <td>{{ movie.popularity }}</td>\\n                           \\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n\\n            \\n        \\n  \"","module.exports = \".jumbotron--box {\\n  margin-top: 62px;\\n  position: relative;\\n  width: 100%;\\n  padding-top: 150px;\\n  padding-bottom: 100px;\\n  color: white;\\n  background: url(\\\"/assets/bg-pattern.png\\\"), linear-gradient(to left, #3f51b5, #3f51b5); }\\n  .jumbotron--box .jumbotron--container_button {\\n    border-radius: 300px;\\n    font-family: Lato, Helvetica, Arial, sans-serif;\\n    letter-spacing: 2px;\\n    text-transform: uppercase;\\n    font-size: 1vw; }\\n  .search-panel_title {\\n  color: #28a745; }\\n  .movies-table-panel_striped:nth-child(even) {\\n  background-color: skyblue; }\\n  .movie-searched_image {\\n  width: 100%; }\\n  img {\\n  width: 100%; }\\n  .btn-default {\\n  background-color: #291c1c !important;\\n  color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Location } from '@angular/common';\nimport { MoviesService } from '../movies.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.scss']\n})\nexport class MoviesComponent implements OnInit {\n  movies: any;\n  searchRes: any;\n  searchStr: any;\n  theatersList: any;\n  constructor(private moviesService: MoviesService) {\n    this.movies = [];\n    this.moviesService.getInTheaters().subscribe(res => {\n      this.theatersList = res.results;\n    });\n  }\n  searchMovies() {\n    this.moviesService.searchMovies(this.searchStr).subscribe(res => {\n      this.searchRes = res.results;\n    });\n  }\n  ngOnInit() {\n    this.moviesService.getMovies()\n      .subscribe(res => {\n        console.log(res);\n        this.movies = res.results;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}